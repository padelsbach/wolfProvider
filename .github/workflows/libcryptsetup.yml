name: Libcryptsetup Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
      replace_default: ${{ matrix.replace_default }}
    strategy:
      matrix:
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]
        replace_default: [ true ]
        fips: [ false ]

  test_cryptsetup:
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    container:
      image: debian:bookworm
      env:
        DEBIAN_FRONTEND: noninteractive
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        cryptsetup_ref: ['v2.6.1']
        wolfssl_ref: ['v5.8.2-stable']
        openssl_ref: ['openssl-3.5.2']
        force_fail: ['WOLFPROV_FORCE_FAIL=1', '']
        replace_default: [ true ]
        fips: [ false ]
    env:
      WOLFSSL_PACKAGES_PATH: /tmp/wolfssl-packages
      OPENSSL_PACKAGES_PATH: /tmp/openssl-packages
      WOLFPROV_PACKAGES_PATH: /tmp/wolfprov-packages

    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Checking OpenSSL/wolfProvider packages in cache
        uses: actions/cache/restore@v4
        id: wolfprov-cache
        with:
          path: |
            ${{ env.WOLFSSL_PACKAGES_PATH }}
            ${{ env.OPENSSL_PACKAGES_PATH }}
            ${{ env.WOLFPROV_PACKAGES_PATH }}
          key: openssl-wolfprov-debian-packages-${{ github.sha }}${{ matrix.replace_default && '-replace-default' || '' }}
          fail-on-cache-miss: true

      - name: Install wolfSSL/OpenSSL/wolfprov packages
        run: |
          printf "Installing OpenSSL/wolfProvider packages:\n"
          ls -la ${{ env.WOLFSSL_PACKAGES_PATH }}
          ls -la ${{ env.OPENSSL_PACKAGES_PATH }}
          ls -la ${{ env.WOLFPROV_PACKAGES_PATH }}

          apt install --reinstall -y --allow-downgrades --allow-change-held-packages \
            ${{ env.WOLFSSL_PACKAGES_PATH }}/libwolfssl_*.deb

          apt install --reinstall -y --allow-downgrades --allow-change-held-packages \
            ${{ env.OPENSSL_PACKAGES_PATH }}/openssl_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl3_*.deb \
            ${{ env.OPENSSL_PACKAGES_PATH }}/libssl-dev_*.deb

          apt install --reinstall -y --allow-downgrades --allow-change-held-packages \
            ${{ env.WOLFPROV_PACKAGES_PATH }}/libwolfprov_*.deb

      - name: Verify wolfProvider is properly installed
        run: |
          $GITHUB_WORKSPACE/scripts/verify-install.sh ${{ matrix.replace_default && '--replace-default' || '' }} ${{ matrix.fips && '--fips' || '' }}

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y \
            build-essential autoconf asciidoctor gettext autopoint libtool \
            pkg-config uuid-dev libdevmapper-dev libpopt-dev libjson-c-dev \
            libargon2-dev libblkid-dev bsdextrautils kmod util-linux cryptsetup-bin
 
      - name: Checkout cryptsetup
        uses: actions/checkout@v4
        with:
          repository: mbroz/cryptsetup
          path: cryptsetup
          ref: ${{ matrix.cryptsetup_ref }}

      - name: Checkout OSP
        uses: actions/checkout@v4
        with:
          repository: wolfssl/osp
          path: osp
          fetch-depth: 1
      - run: |
          cd cryptsetup
          patch -p1 < $GITHUB_WORKSPACE/osp/wolfProvider/libcryptsetup/libcryptsetup-${{ matrix.cryptsetup_ref }}-wolfprov.patch

      - name: Build cryptsetup
        working-directory: cryptsetup
        run: |
          ./autogen.sh
          ./configure --enable-static \
            --with-crypto-backend=openssl \
            --disable-ssh-token
          make -j$(nproc)

      # According to ChatGPT, the following tests are excluded since they use 
      # crypto kernel rather than openssl:
      # bitlk-compat-test → does activation via dm-crypt (kernel).
      # reencryption-compat-test → kernel dm-crypt online reencryption.
      # verity-compat-test → dm-verity (kernel).
      # integrity-compat-test → dm-integrity (kernel).
      # blockwise-compat-test / luks2-*reencryption* → scsi_debug / kernel paths.
      # unit-wipe-test → direct I/O expectations that depend on kernel/devices.
      # Instead, only run the following tests:
      # - vectors-test
      # - run-all-symbols
      # - unit-utils-crypt-test
      - name: Run cryptsetup tests
        working-directory: cryptsetup
        run: |
          export ${{ matrix.force_fail }}

          # from the cryptsetup source root
          make -j$(nproc)
          make -C tests check TESTS="vectors-test run-all-symbols unit-utils-crypt-test" VERBOSE=1 2>&1 | tee cryptsetup-test.log
          TEST_RESULT=$(grep -q "All 3 tests passed" cryptsetup-test.log && echo "0" || echo "1")
          printf "TEST_RESULT: $TEST_RESULT\n"
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} cryptsetup
