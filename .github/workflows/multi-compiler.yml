name: Multi-Compiler Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    name: Build with compiler ${{ matrix.CC }}, wolfssl ${{ matrix.wolfssl_ref }}, OpenSSL ${{ matrix.openssl_ref }}
    runs-on: ${{ matrix.OS }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        include:
          - CC: gcc-9
            CXX: g++-9
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: gcc-10
            CXX: g++-10
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: gcc-10
            CXX: g++-10
            OS: ubuntu-latest
            wolfssl_ref: v5.8.0-stable
            openssl_ref: master
          - CC: gcc-11
            CXX: g++-11
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: gcc-12
            CXX: g++-12
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: gcc-13
            CXX: g++-13
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: gcc-14
            CXX: g++-14
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: clang-12
            CXX: clang++-12
            OS: ubuntu-22.04
            wolfssl_ref: master
            openssl_ref: master
          - CC: clang-13
            CXX: clang++-13
            OS: ubuntu-22.04
            wolfssl_ref: master
            openssl_ref: master
          - CC: clang-14
            CXX: clang++-14
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
          - CC: clang-15
            CXX: clang++-15
            OS: ubuntu-latest
            wolfssl_ref: master
            openssl_ref: master
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ${{ matrix.CC }} ${{ matrix.CXX }} automake libtool

      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Get OpenSSL commit hash
        id: openssl-ref
        run: |
          sha=$(./scripts/resolve-ref.sh "${{ matrix.openssl_ref }}" "openssl/openssl")
          echo "ref=$sha" >> "$GITHUB_OUTPUT"
        env:
          # Used token to bypass rate limits
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get WolfSSL commit hash
        id: wolfssl-ref
        run: |
          sha=$(./scripts/resolve-ref.sh "${{ matrix.wolfssl_ref }}" "wolfssl/wolfssl")
          echo "ref=$sha" >> "$GITHUB_OUTPUT"
        env:
          # Used token to bypass rate limits
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Look for a cached version of OpenSSL -- with this compiler version
      - name: Checking OpenSSL in cache
        uses: actions/cache@v4
        id: openssl-cache
        with:
          path: |
            openssl-install
          key: openssl-depends-${{ matrix.CC }}-${{ steps.openssl-ref.outputs.ref }}
          lookup-only: false

      # Look for a cached version of WolfSSL -- with this compiler version
      - name: Checking WolfSSL in cache
        uses: actions/cache@v4
        id: wolfssl-cache
        with:
          path: |
            wolfssl-install
          key: wolfssl-depends-${{ matrix.CC }}-${{ steps.wolfssl-ref.outputs.ref }}
          lookup-only: false

      - name: Build wolfProvider
        env:
          CC: ${{ matrix.CC }}
          CXX: ${{ matrix.CXX }}
        run: |
          OPENSSL_TAG=${{ matrix.openssl_ref }} WOLFSSL_TAG=${{ matrix.wolfssl_ref }} ./scripts/build-wolfprovider.sh

      - name: Print errors
        if: ${{ failure() }}
        run: |
          if [ -f test-suite.log ]; then
            cat test-suite.log
          fi
          if [ -f config.log ]; then
            cat config.log
          fi
