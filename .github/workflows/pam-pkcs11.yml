name: pam-pkcs11 Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]
  workflow_run:
    workflows: ["Build Packages"]
    types:
      - completed
    branches: [ '**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  build_wolfprovider:
    uses: ./.github/workflows/build-wolfprovider.yml
    with:
      wolfssl_ref: ${{ matrix.wolfssl_ref }}
      openssl_ref: ${{ matrix.openssl_ref }}
    strategy:
      matrix:
        wolfssl_ref: [ 'master', 'v5.8.0-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
  test_pam_pkcs11:
    if: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-22.04
    needs: build_wolfprovider
    # This should be a safe limit for the tests to run.
    timeout-minutes: 20
    strategy:
      matrix:
        # Match the matrix from build.yml
        wolfssl_ref: [ 'v5.8.2-stable' ]
        openssl_ref: [ 'openssl-3.5.2' ]  # Note: build.yml uses 3.5.2, not 3.5.0
        replace_default: [ true ]
        # pam-pkcs11-specific matrix
        pam_pkcs11_ref: [ 'master', 'pam_pkcs11-0.6.12' ]
        force_fail: [ 'WOLFPROV_FORCE_FAIL=1', '' ]
        exclude:
          - pam_pkcs11_ref: 'master'
            force_fail: 'WOLFPROV_FORCE_FAIL=1'
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Download wolfProvider packages
        uses: actions/download-artifact@v4
        with:
          name: wolfprov-debian-packages-${{ matrix.wolfssl_ref }}-${{ matrix.openssl_ref }}${{ matrix.replace_default && '-replace-default' || '' }}
          path: /tmp/wolfprov-packages

      - name: Install wolfProvider packages
        run: |
          $GITHUB_WORKSPACE/.github/scripts/install-packages.sh

      - name: Run pam_pkcs11 tests
        run: |
          # Setup environment variables
          source $GITHUB_WORKSPACE/scripts/env-setup

          # Run tests
          if timeout 300 sudo bash -c "${{ matrix.force_fail }} PAM_PKCS11_REF=${{ matrix.pam_pkcs11_ref }} $GITHUB_WORKSPACE/.github/scripts/pam-pkcs11-test.sh"; then
            TEST_RESULT=0
          else
            TEST_RESULT=1
          fi

          # Capture result
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} pam_pkcs11
