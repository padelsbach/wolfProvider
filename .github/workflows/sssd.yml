name: SSSD Tests

# START OF COMMON SECTION
on:
  push:
    branches: [ 'master', 'main', 'release/**' ]
  pull_request:
    branches: [ '*' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
# END OF COMMON SECTION

jobs:
  test_sssd:
    runs-on: ubuntu-22.04
    timeout-minutes: 20
    strategy:
      matrix:
        sssd_ref: [ 'master', '2.9.1' ]
        wolfssl_ref: [ 'master', 'v5.8.0-stable' ]
        openssl_ref: [ 'openssl-3.5.0' ]
        force_fail: ['WOLFPROV_FORCE_FAIL=1', '']
        exclude:
          - sssd_ref: 'master'
            force_fail: 'WOLFPROV_FORCE_FAIL=1'
    steps:
      - name: Checkout wolfProvider
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      # Check if this version of wolfssl/wolfprovider has already been built,
      # mark to cache these items on post if we do end up building
      - name: Checking wolfSSL/wolfProvider in cache
        uses: actions/cache@v4
        id: wolfprov-cache
        with:
          path: |
            scripts
            wolfssl-source
            wolfssl-install
            wolfprov-install
            provider.conf

          key: wolfprov-${{ matrix.wolfssl_ref }}-${{ github.sha }}
          lookup-only: true

      # If wolfssl/wolfprovider have not yet been built, pull ossl from cache
      - name: Checking OpenSSL in cache
        if: steps.wolfprov-${{ matrix.wolfssl_ref }}-cache.hit != 'true'
        uses: actions/cache@v4
        id: openssl-cache
        with:
          path: |
            openssl-source
            openssl-install

          key: ossl-depends-${{ matrix.openssl_ref }}-${{ github.sha }}
          lookup-only: true

      # If not yet built this version, build it now
      - name: Build wolfProvider
        if: steps.wolfprov-${{ matrix.wolfssl_ref }}-cache.hit != 'true'
        run: |
          OPENSSL_TAG=${{ matrix.openssl_ref }} WOLFSSL_TAG=${{ matrix.wolfssl_ref }} ./scripts/build-wolfprovider.sh

      - name: Install dependencies
        run: |
          # Don't prompt for anything
          export DEBIAN_FRONTEND=noninteractive
          sudo apt-get update
          sudo apt-get install -y build-essential autoconf libldb-dev \
            libldb2 python3-ldb bc libcap-dev libutf8proc-dev gettext \
            autopoint libpopt-dev libdhash-dev libini-config-dev libkrb5-dev \
            libpam0g-dev libpcre2-dev libc-ares-dev bind9-dnsutils libkrad-dev \
            libsasl2-dev libjansson-dev libunistring-dev libdbus-1-dev \
            xsltproc libxml2-utils python3.12-dev libsemanage-dev \
            libp11-kit-dev python3.12-venv python3-setuptools libldap2-dev \
            docbook-xsl docbook-xml docbook-xml-extras uuid-dev

      - name: Download SSSD
        uses: actions/checkout@v4
        with:
          repository: SSSD/sssd
          ref: ${{ matrix.sssd_ref }}
          path: sssd

      - name: Build SSSD
        working-directory: sssd
        run: |
          # Configure and build SSSD
          autoreconf -ivf
          ./configure --without-samba --disable-cifs-idmap-plugin \
          --without-nfsv4-idmapd-plugin --with-oidc-child=no --without-kcm \
          CFLAGS="-I/usr/include/samba-4.0 -I/git/wolfProvider/openssl-install/include"
          make -j

      - name: Run tests
        working-directory: sssd
        # shell: bash # not sure why this is needed only for this workflow
        run: |
          # Set up the environment for wolfProvider
          source $GITHUB_WORKSPACE/scripts/env-setup
          export ${{ matrix.force_fail }}

          # Run tests and save result
          make check 2>&1 | tee sssd-test.log
          TEST_RESULT=$?
          $GITHUB_WORKSPACE/.github/scripts/check-workflow-result.sh $TEST_RESULT ${{ matrix.force_fail }} sssd
