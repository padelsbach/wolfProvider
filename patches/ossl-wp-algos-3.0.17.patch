diff --git a/providers/defltprov.c b/providers/defltprov.c
index ed3f4799e7..48aabf5a13 100644
--- a/providers/defltprov.c
+++ b/providers/defltprov.c
@@ -114,44 +114,6 @@ static const OSSL_ALGORITHM deflt_digests[] = {
     { PROV_NAMES_SHA3_384, "provider=default", ossl_sha3_384_functions },
     { PROV_NAMES_SHA3_512, "provider=default", ossl_sha3_512_functions },
 
-    /*
-     * KECCAK-KMAC-128 and KECCAK-KMAC-256 as hashes are mostly useful for
-     * the KMAC-128 and KMAC-256.
-     */
-    { PROV_NAMES_KECCAK_KMAC_128, "provider=default",
-      ossl_keccak_kmac_128_functions },
-    { PROV_NAMES_KECCAK_KMAC_256, "provider=default",
-      ossl_keccak_kmac_256_functions },
-
-    /* Our primary name:NIST name */
-    { PROV_NAMES_SHAKE_128, "provider=default", ossl_shake_128_functions },
-    { PROV_NAMES_SHAKE_256, "provider=default", ossl_shake_256_functions },
-
-#ifndef OPENSSL_NO_BLAKE2
-    /*
-     * https://blake2.net/ doesn't specify size variants,
-     * but mentions that Bouncy Castle uses the names
-     * BLAKE2b-160, BLAKE2b-256, BLAKE2b-384, and BLAKE2b-512
-     * If we assume that "2b" and "2s" are versions, that pattern
-     * fits with ours.  We also add our historical names.
-     */
-    { PROV_NAMES_BLAKE2S_256, "provider=default", ossl_blake2s256_functions },
-    { PROV_NAMES_BLAKE2B_512, "provider=default", ossl_blake2b512_functions },
-#endif /* OPENSSL_NO_BLAKE2 */
-
-#ifndef OPENSSL_NO_SM3
-    { PROV_NAMES_SM3, "provider=default", ossl_sm3_functions },
-#endif /* OPENSSL_NO_SM3 */
-
-#ifndef OPENSSL_NO_MD5
-    { PROV_NAMES_MD5, "provider=default", ossl_md5_functions },
-    { PROV_NAMES_MD5_SHA1, "provider=default", ossl_md5_sha1_functions },
-#endif /* OPENSSL_NO_MD5 */
-
-#ifndef OPENSSL_NO_RMD160
-    { PROV_NAMES_RIPEMD_160, "provider=default", ossl_ripemd160_functions },
-#endif /* OPENSSL_NO_RMD160 */
-
     { PROV_NAMES_NULL, "provider=default", ossl_nullmd_functions },
     { NULL, NULL, NULL }
 };
@@ -170,159 +132,25 @@ static const OSSL_ALGORITHM_CAPABLE deflt_ciphers[] = {
     ALG(PROV_NAMES_AES_256_OFB, ossl_aes256ofb_functions),
     ALG(PROV_NAMES_AES_192_OFB, ossl_aes192ofb_functions),
     ALG(PROV_NAMES_AES_128_OFB, ossl_aes128ofb_functions),
-    ALG(PROV_NAMES_AES_256_CFB, ossl_aes256cfb_functions),
-    ALG(PROV_NAMES_AES_192_CFB, ossl_aes192cfb_functions),
-    ALG(PROV_NAMES_AES_128_CFB, ossl_aes128cfb_functions),
-    ALG(PROV_NAMES_AES_256_CFB1, ossl_aes256cfb1_functions),
-    ALG(PROV_NAMES_AES_192_CFB1, ossl_aes192cfb1_functions),
-    ALG(PROV_NAMES_AES_128_CFB1, ossl_aes128cfb1_functions),
-    ALG(PROV_NAMES_AES_256_CFB8, ossl_aes256cfb8_functions),
-    ALG(PROV_NAMES_AES_192_CFB8, ossl_aes192cfb8_functions),
-    ALG(PROV_NAMES_AES_128_CFB8, ossl_aes128cfb8_functions),
     ALG(PROV_NAMES_AES_256_CTR, ossl_aes256ctr_functions),
     ALG(PROV_NAMES_AES_192_CTR, ossl_aes192ctr_functions),
     ALG(PROV_NAMES_AES_128_CTR, ossl_aes128ctr_functions),
-    ALG(PROV_NAMES_AES_256_XTS, ossl_aes256xts_functions),
-    ALG(PROV_NAMES_AES_128_XTS, ossl_aes128xts_functions),
-#ifndef OPENSSL_NO_OCB
-    ALG(PROV_NAMES_AES_256_OCB, ossl_aes256ocb_functions),
-    ALG(PROV_NAMES_AES_192_OCB, ossl_aes192ocb_functions),
-    ALG(PROV_NAMES_AES_128_OCB, ossl_aes128ocb_functions),
-#endif /* OPENSSL_NO_OCB */
-#ifndef OPENSSL_NO_SIV
-    ALG(PROV_NAMES_AES_128_SIV, ossl_aes128siv_functions),
-    ALG(PROV_NAMES_AES_192_SIV, ossl_aes192siv_functions),
-    ALG(PROV_NAMES_AES_256_SIV, ossl_aes256siv_functions),
-#endif /* OPENSSL_NO_SIV */
     ALG(PROV_NAMES_AES_256_GCM, ossl_aes256gcm_functions),
     ALG(PROV_NAMES_AES_192_GCM, ossl_aes192gcm_functions),
     ALG(PROV_NAMES_AES_128_GCM, ossl_aes128gcm_functions),
     ALG(PROV_NAMES_AES_256_CCM, ossl_aes256ccm_functions),
     ALG(PROV_NAMES_AES_192_CCM, ossl_aes192ccm_functions),
     ALG(PROV_NAMES_AES_128_CCM, ossl_aes128ccm_functions),
-    ALG(PROV_NAMES_AES_256_WRAP, ossl_aes256wrap_functions),
-    ALG(PROV_NAMES_AES_192_WRAP, ossl_aes192wrap_functions),
-    ALG(PROV_NAMES_AES_128_WRAP, ossl_aes128wrap_functions),
-    ALG(PROV_NAMES_AES_256_WRAP_PAD, ossl_aes256wrappad_functions),
-    ALG(PROV_NAMES_AES_192_WRAP_PAD, ossl_aes192wrappad_functions),
-    ALG(PROV_NAMES_AES_128_WRAP_PAD, ossl_aes128wrappad_functions),
-    ALG(PROV_NAMES_AES_256_WRAP_INV, ossl_aes256wrapinv_functions),
-    ALG(PROV_NAMES_AES_192_WRAP_INV, ossl_aes192wrapinv_functions),
-    ALG(PROV_NAMES_AES_128_WRAP_INV, ossl_aes128wrapinv_functions),
-    ALG(PROV_NAMES_AES_256_WRAP_PAD_INV, ossl_aes256wrappadinv_functions),
-    ALG(PROV_NAMES_AES_192_WRAP_PAD_INV, ossl_aes192wrappadinv_functions),
-    ALG(PROV_NAMES_AES_128_WRAP_PAD_INV, ossl_aes128wrappadinv_functions),
-    ALGC(PROV_NAMES_AES_128_CBC_HMAC_SHA1, ossl_aes128cbc_hmac_sha1_functions,
-         ossl_cipher_capable_aes_cbc_hmac_sha1),
-    ALGC(PROV_NAMES_AES_256_CBC_HMAC_SHA1, ossl_aes256cbc_hmac_sha1_functions,
-         ossl_cipher_capable_aes_cbc_hmac_sha1),
-    ALGC(PROV_NAMES_AES_128_CBC_HMAC_SHA256, ossl_aes128cbc_hmac_sha256_functions,
-        ossl_cipher_capable_aes_cbc_hmac_sha256),
-    ALGC(PROV_NAMES_AES_256_CBC_HMAC_SHA256, ossl_aes256cbc_hmac_sha256_functions,
-         ossl_cipher_capable_aes_cbc_hmac_sha256),
-#ifndef OPENSSL_NO_ARIA
-    ALG(PROV_NAMES_ARIA_256_GCM, ossl_aria256gcm_functions),
-    ALG(PROV_NAMES_ARIA_192_GCM, ossl_aria192gcm_functions),
-    ALG(PROV_NAMES_ARIA_128_GCM, ossl_aria128gcm_functions),
-    ALG(PROV_NAMES_ARIA_256_CCM, ossl_aria256ccm_functions),
-    ALG(PROV_NAMES_ARIA_192_CCM, ossl_aria192ccm_functions),
-    ALG(PROV_NAMES_ARIA_128_CCM, ossl_aria128ccm_functions),
-    ALG(PROV_NAMES_ARIA_256_ECB, ossl_aria256ecb_functions),
-    ALG(PROV_NAMES_ARIA_192_ECB, ossl_aria192ecb_functions),
-    ALG(PROV_NAMES_ARIA_128_ECB, ossl_aria128ecb_functions),
-    ALG(PROV_NAMES_ARIA_256_CBC, ossl_aria256cbc_functions),
-    ALG(PROV_NAMES_ARIA_192_CBC, ossl_aria192cbc_functions),
-    ALG(PROV_NAMES_ARIA_128_CBC, ossl_aria128cbc_functions),
-    ALG(PROV_NAMES_ARIA_256_OFB, ossl_aria256ofb_functions),
-    ALG(PROV_NAMES_ARIA_192_OFB, ossl_aria192ofb_functions),
-    ALG(PROV_NAMES_ARIA_128_OFB, ossl_aria128ofb_functions),
-    ALG(PROV_NAMES_ARIA_256_CFB, ossl_aria256cfb_functions),
-    ALG(PROV_NAMES_ARIA_192_CFB, ossl_aria192cfb_functions),
-    ALG(PROV_NAMES_ARIA_128_CFB, ossl_aria128cfb_functions),
-    ALG(PROV_NAMES_ARIA_256_CFB1, ossl_aria256cfb1_functions),
-    ALG(PROV_NAMES_ARIA_192_CFB1, ossl_aria192cfb1_functions),
-    ALG(PROV_NAMES_ARIA_128_CFB1, ossl_aria128cfb1_functions),
-    ALG(PROV_NAMES_ARIA_256_CFB8, ossl_aria256cfb8_functions),
-    ALG(PROV_NAMES_ARIA_192_CFB8, ossl_aria192cfb8_functions),
-    ALG(PROV_NAMES_ARIA_128_CFB8, ossl_aria128cfb8_functions),
-    ALG(PROV_NAMES_ARIA_256_CTR, ossl_aria256ctr_functions),
-    ALG(PROV_NAMES_ARIA_192_CTR, ossl_aria192ctr_functions),
-    ALG(PROV_NAMES_ARIA_128_CTR, ossl_aria128ctr_functions),
-#endif /* OPENSSL_NO_ARIA */
-#ifndef OPENSSL_NO_CAMELLIA
-    ALG(PROV_NAMES_CAMELLIA_256_ECB, ossl_camellia256ecb_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_ECB, ossl_camellia192ecb_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_ECB, ossl_camellia128ecb_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CBC, ossl_camellia256cbc_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CBC, ossl_camellia192cbc_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CBC, ossl_camellia128cbc_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CBC_CTS, ossl_camellia128cbc_cts_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CBC_CTS, ossl_camellia192cbc_cts_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CBC_CTS, ossl_camellia256cbc_cts_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_OFB, ossl_camellia256ofb_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_OFB, ossl_camellia192ofb_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_OFB, ossl_camellia128ofb_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CFB, ossl_camellia256cfb_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CFB, ossl_camellia192cfb_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CFB, ossl_camellia128cfb_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CFB1, ossl_camellia256cfb1_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CFB1, ossl_camellia192cfb1_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CFB1, ossl_camellia128cfb1_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CFB8, ossl_camellia256cfb8_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CFB8, ossl_camellia192cfb8_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CFB8, ossl_camellia128cfb8_functions),
-    ALG(PROV_NAMES_CAMELLIA_256_CTR, ossl_camellia256ctr_functions),
-    ALG(PROV_NAMES_CAMELLIA_192_CTR, ossl_camellia192ctr_functions),
-    ALG(PROV_NAMES_CAMELLIA_128_CTR, ossl_camellia128ctr_functions),
-#endif /* OPENSSL_NO_CAMELLIA */
-#ifndef OPENSSL_NO_DES
-    ALG(PROV_NAMES_DES_EDE3_ECB, ossl_tdes_ede3_ecb_functions),
-    ALG(PROV_NAMES_DES_EDE3_CBC, ossl_tdes_ede3_cbc_functions),
-    ALG(PROV_NAMES_DES_EDE3_OFB, ossl_tdes_ede3_ofb_functions),
-    ALG(PROV_NAMES_DES_EDE3_CFB, ossl_tdes_ede3_cfb_functions),
-    ALG(PROV_NAMES_DES_EDE3_CFB8, ossl_tdes_ede3_cfb8_functions),
-    ALG(PROV_NAMES_DES_EDE3_CFB1, ossl_tdes_ede3_cfb1_functions),
-    ALG(PROV_NAMES_DES3_WRAP, ossl_tdes_wrap_cbc_functions),
-    ALG(PROV_NAMES_DES_EDE_ECB, ossl_tdes_ede2_ecb_functions),
-    ALG(PROV_NAMES_DES_EDE_CBC, ossl_tdes_ede2_cbc_functions),
-    ALG(PROV_NAMES_DES_EDE_OFB, ossl_tdes_ede2_ofb_functions),
-    ALG(PROV_NAMES_DES_EDE_CFB, ossl_tdes_ede2_cfb_functions),
-#endif /* OPENSSL_NO_DES */
-#ifndef OPENSSL_NO_SM4
-    ALG(PROV_NAMES_SM4_ECB, ossl_sm4128ecb_functions),
-    ALG(PROV_NAMES_SM4_CBC, ossl_sm4128cbc_functions),
-    ALG(PROV_NAMES_SM4_CTR, ossl_sm4128ctr_functions),
-    ALG(PROV_NAMES_SM4_OFB, ossl_sm4128ofb128_functions),
-    ALG(PROV_NAMES_SM4_CFB, ossl_sm4128cfb128_functions),
-#endif /* OPENSSL_NO_SM4 */
-#ifndef OPENSSL_NO_CHACHA
-    ALG(PROV_NAMES_ChaCha20, ossl_chacha20_functions),
-# ifndef OPENSSL_NO_POLY1305
-    ALG(PROV_NAMES_ChaCha20_Poly1305, ossl_chacha20_ossl_poly1305_functions),
-# endif /* OPENSSL_NO_POLY1305 */
-#endif /* OPENSSL_NO_CHACHA */
     { { NULL, NULL, NULL }, NULL }
 };
 static OSSL_ALGORITHM exported_ciphers[OSSL_NELEM(deflt_ciphers)];
 
 static const OSSL_ALGORITHM deflt_macs[] = {
-#ifndef OPENSSL_NO_BLAKE2
-    { PROV_NAMES_BLAKE2BMAC, "provider=default", ossl_blake2bmac_functions },
-    { PROV_NAMES_BLAKE2SMAC, "provider=default", ossl_blake2smac_functions },
-#endif
 #ifndef OPENSSL_NO_CMAC
     { PROV_NAMES_CMAC, "provider=default", ossl_cmac_functions },
 #endif
     { PROV_NAMES_GMAC, "provider=default", ossl_gmac_functions },
     { PROV_NAMES_HMAC, "provider=default", ossl_hmac_functions },
-    { PROV_NAMES_KMAC_128, "provider=default", ossl_kmac128_functions },
-    { PROV_NAMES_KMAC_256, "provider=default", ossl_kmac256_functions },
-#ifndef OPENSSL_NO_SIPHASH
-    { PROV_NAMES_SIPHASH, "provider=default", ossl_siphash_functions },
-#endif
-#ifndef OPENSSL_NO_POLY1305
-    { PROV_NAMES_POLY1305, "provider=default", ossl_poly1305_functions },
-#endif
     { NULL, NULL, NULL }
 };
 
@@ -330,17 +158,10 @@ static const OSSL_ALGORITHM deflt_kdfs[] = {
     { PROV_NAMES_HKDF, "provider=default", ossl_kdf_hkdf_functions },
     { PROV_NAMES_TLS1_3_KDF, "provider=default",
       ossl_kdf_tls1_3_kdf_functions },
-    { PROV_NAMES_SSKDF, "provider=default", ossl_kdf_sskdf_functions },
     { PROV_NAMES_PBKDF2, "provider=default", ossl_kdf_pbkdf2_functions },
     { PROV_NAMES_PKCS12KDF, "provider=default", ossl_kdf_pkcs12_functions },
-    { PROV_NAMES_SSHKDF, "provider=default", ossl_kdf_sshkdf_functions },
-    { PROV_NAMES_X963KDF, "provider=default", ossl_kdf_x963_kdf_functions },
     { PROV_NAMES_TLS1_PRF, "provider=default", ossl_kdf_tls1_prf_functions },
     { PROV_NAMES_KBKDF, "provider=default", ossl_kdf_kbkdf_functions },
-    { PROV_NAMES_X942KDF_ASN1, "provider=default", ossl_kdf_x942_kdf_functions },
-#ifndef OPENSSL_NO_SCRYPT
-    { PROV_NAMES_SCRYPT, "provider=default", ossl_kdf_scrypt_functions },
-#endif
     { PROV_NAMES_KRB5KDF, "provider=default", ossl_kdf_krb5kdf_functions },
     { NULL, NULL, NULL }
 };
@@ -351,45 +172,24 @@ static const OSSL_ALGORITHM deflt_keyexch[] = {
 #endif
 #ifndef OPENSSL_NO_EC
     { PROV_NAMES_ECDH, "provider=default", ossl_ecdh_keyexch_functions },
-    { PROV_NAMES_X25519, "provider=default", ossl_x25519_keyexch_functions },
-    { PROV_NAMES_X448, "provider=default", ossl_x448_keyexch_functions },
 #endif
     { PROV_NAMES_TLS1_PRF, "provider=default", ossl_kdf_tls1_prf_keyexch_functions },
     { PROV_NAMES_HKDF, "provider=default", ossl_kdf_hkdf_keyexch_functions },
-    { PROV_NAMES_SCRYPT, "provider=default",
-      ossl_kdf_scrypt_keyexch_functions },
     { NULL, NULL, NULL }
 };
 
 static const OSSL_ALGORITHM deflt_rands[] = {
     { PROV_NAMES_CTR_DRBG, "provider=default", ossl_drbg_ctr_functions },
     { PROV_NAMES_HASH_DRBG, "provider=default", ossl_drbg_hash_functions },
-    { PROV_NAMES_HMAC_DRBG, "provider=default", ossl_drbg_ossl_hmac_functions },
-    { PROV_NAMES_SEED_SRC, "provider=default", ossl_seed_src_functions },
-    { PROV_NAMES_TEST_RAND, "provider=default", ossl_test_rng_functions },
     { NULL, NULL, NULL }
 };
 
 static const OSSL_ALGORITHM deflt_signature[] = {
-#ifndef OPENSSL_NO_DSA
-    { PROV_NAMES_DSA, "provider=default", ossl_dsa_signature_functions },
-#endif
     { PROV_NAMES_RSA, "provider=default", ossl_rsa_signature_functions },
 #ifndef OPENSSL_NO_EC
-    { PROV_NAMES_ED25519, "provider=default", ossl_ed25519_signature_functions },
-    { PROV_NAMES_ED448, "provider=default", ossl_ed448_signature_functions },
     { PROV_NAMES_ECDSA, "provider=default", ossl_ecdsa_signature_functions },
-# ifndef OPENSSL_NO_SM2
-    { PROV_NAMES_SM2, "provider=default", ossl_sm2_signature_functions },
-# endif
 #endif
     { PROV_NAMES_HMAC, "provider=default", ossl_mac_legacy_hmac_signature_functions },
-    { PROV_NAMES_SIPHASH, "provider=default",
-      ossl_mac_legacy_siphash_signature_functions },
-#ifndef OPENSSL_NO_POLY1305
-    { PROV_NAMES_POLY1305, "provider=default",
-      ossl_mac_legacy_poly1305_signature_functions },
-#endif
 #ifndef OPENSSL_NO_CMAC
     { PROV_NAMES_CMAC, "provider=default", ossl_mac_legacy_cmac_signature_functions },
 #endif
@@ -398,9 +198,6 @@ static const OSSL_ALGORITHM deflt_signature[] = {
 
 static const OSSL_ALGORITHM deflt_asym_cipher[] = {
     { PROV_NAMES_RSA, "provider=default", ossl_rsa_asym_cipher_functions },
-#ifndef OPENSSL_NO_SM2
-    { PROV_NAMES_SM2, "provider=default", ossl_sm2_asym_cipher_functions },
-#endif
     { NULL, NULL, NULL }
 };
 
@@ -415,10 +212,6 @@ static const OSSL_ALGORITHM deflt_keymgmt[] = {
       PROV_DESCS_DH },
     { PROV_NAMES_DHX, "provider=default", ossl_dhx_keymgmt_functions,
       PROV_DESCS_DHX },
-#endif
-#ifndef OPENSSL_NO_DSA
-    { PROV_NAMES_DSA, "provider=default", ossl_dsa_keymgmt_functions,
-      PROV_DESCS_DSA},
 #endif
     { PROV_NAMES_RSA, "provider=default", ossl_rsa_keymgmt_functions,
       PROV_DESCS_RSA },
@@ -427,36 +220,16 @@ static const OSSL_ALGORITHM deflt_keymgmt[] = {
 #ifndef OPENSSL_NO_EC
     { PROV_NAMES_EC, "provider=default", ossl_ec_keymgmt_functions,
       PROV_DESCS_EC },
-    { PROV_NAMES_X25519, "provider=default", ossl_x25519_keymgmt_functions,
-      PROV_DESCS_X25519 },
-    { PROV_NAMES_X448, "provider=default", ossl_x448_keymgmt_functions,
-      PROV_DESCS_X448 },
-    { PROV_NAMES_ED25519, "provider=default", ossl_ed25519_keymgmt_functions,
-      PROV_DESCS_ED25519 },
-    { PROV_NAMES_ED448, "provider=default", ossl_ed448_keymgmt_functions,
-      PROV_DESCS_ED448 },
 #endif
     { PROV_NAMES_TLS1_PRF, "provider=default", ossl_kdf_keymgmt_functions,
       PROV_DESCS_TLS1_PRF_SIGN },
     { PROV_NAMES_HKDF, "provider=default", ossl_kdf_keymgmt_functions,
       PROV_DESCS_HKDF_SIGN },
-    { PROV_NAMES_SCRYPT, "provider=default", ossl_kdf_keymgmt_functions,
-      PROV_DESCS_SCRYPT_SIGN },
     { PROV_NAMES_HMAC, "provider=default", ossl_mac_legacy_keymgmt_functions,
       PROV_DESCS_HMAC_SIGN },
-    { PROV_NAMES_SIPHASH, "provider=default", ossl_mac_legacy_keymgmt_functions,
-      PROV_DESCS_SIPHASH_SIGN },
-#ifndef OPENSSL_NO_POLY1305
-    { PROV_NAMES_POLY1305, "provider=default", ossl_mac_legacy_keymgmt_functions,
-      PROV_DESCS_POLY1305_SIGN },
-#endif
 #ifndef OPENSSL_NO_CMAC
     { PROV_NAMES_CMAC, "provider=default", ossl_cmac_legacy_keymgmt_functions,
       PROV_DESCS_CMAC_SIGN },
-#endif
-#ifndef OPENSSL_NO_SM2
-    { PROV_NAMES_SM2, "provider=default", ossl_sm2_keymgmt_functions,
-      PROV_DESCS_SM2 },
 #endif
     { NULL, NULL, NULL }
 };
diff --git a/providers/legacyprov.c b/providers/legacyprov.c
index 38505d86c6..8a9ea2f84d 100644
--- a/providers/legacyprov.c
+++ b/providers/legacyprov.c
@@ -67,84 +67,14 @@ static int legacy_get_params(void *provctx, OSSL_PARAM params[])
 }
 
 static const OSSL_ALGORITHM legacy_digests[] = {
-#ifndef OPENSSL_NO_MD2
-    ALG(PROV_NAMES_MD2, ossl_md2_functions),
-#endif
-#ifndef OPENSSL_NO_MD4
-    ALG(PROV_NAMES_MD4, ossl_md4_functions),
-#endif
-#ifndef OPENSSL_NO_MDC2
-    ALG(PROV_NAMES_MDC2, ossl_mdc2_functions),
-#endif /* OPENSSL_NO_MDC2 */
-#ifndef OPENSSL_NO_WHIRLPOOL
-    ALG(PROV_NAMES_WHIRLPOOL, ossl_wp_functions),
-#endif /* OPENSSL_NO_WHIRLPOOL */
-#ifndef OPENSSL_NO_RMD160
-    ALG(PROV_NAMES_RIPEMD_160, ossl_ripemd160_functions),
-#endif /* OPENSSL_NO_RMD160 */
     { NULL, NULL, NULL }
 };
 
 static const OSSL_ALGORITHM legacy_ciphers[] = {
-#ifndef OPENSSL_NO_CAST
-    ALG(PROV_NAMES_CAST5_ECB, ossl_cast5128ecb_functions),
-    ALG(PROV_NAMES_CAST5_CBC, ossl_cast5128cbc_functions),
-    ALG(PROV_NAMES_CAST5_OFB, ossl_cast5128ofb64_functions),
-    ALG(PROV_NAMES_CAST5_CFB, ossl_cast5128cfb64_functions),
-#endif /* OPENSSL_NO_CAST */
-#ifndef OPENSSL_NO_BF
-    ALG(PROV_NAMES_BF_ECB, ossl_blowfish128ecb_functions),
-    ALG(PROV_NAMES_BF_CBC, ossl_blowfish128cbc_functions),
-    ALG(PROV_NAMES_BF_OFB, ossl_blowfish128ofb64_functions),
-    ALG(PROV_NAMES_BF_CFB, ossl_blowfish128cfb64_functions),
-#endif /* OPENSSL_NO_BF */
-#ifndef OPENSSL_NO_IDEA
-    ALG(PROV_NAMES_IDEA_ECB, ossl_idea128ecb_functions),
-    ALG(PROV_NAMES_IDEA_CBC, ossl_idea128cbc_functions),
-    ALG(PROV_NAMES_IDEA_OFB, ossl_idea128ofb64_functions),
-    ALG(PROV_NAMES_IDEA_CFB, ossl_idea128cfb64_functions),
-#endif /* OPENSSL_NO_IDEA */
-#ifndef OPENSSL_NO_SEED
-    ALG(PROV_NAMES_SEED_ECB, ossl_seed128ecb_functions),
-    ALG(PROV_NAMES_SEED_CBC, ossl_seed128cbc_functions),
-    ALG(PROV_NAMES_SEED_OFB, ossl_seed128ofb128_functions),
-    ALG(PROV_NAMES_SEED_CFB, ossl_seed128cfb128_functions),
-#endif /* OPENSSL_NO_SEED */
-#ifndef OPENSSL_NO_RC2
-    ALG(PROV_NAMES_RC2_ECB, ossl_rc2128ecb_functions),
-    ALG(PROV_NAMES_RC2_CBC, ossl_rc2128cbc_functions),
-    ALG(PROV_NAMES_RC2_40_CBC, ossl_rc240cbc_functions),
-    ALG(PROV_NAMES_RC2_64_CBC, ossl_rc264cbc_functions),
-    ALG(PROV_NAMES_RC2_CFB, ossl_rc2128cfb128_functions),
-    ALG(PROV_NAMES_RC2_OFB, ossl_rc2128ofb128_functions),
-#endif /* OPENSSL_NO_RC2 */
-#ifndef OPENSSL_NO_RC4
-    ALG(PROV_NAMES_RC4, ossl_rc4128_functions),
-    ALG(PROV_NAMES_RC4_40, ossl_rc440_functions),
-# ifndef OPENSSL_NO_MD5
-    ALG(PROV_NAMES_RC4_HMAC_MD5, ossl_rc4_hmac_ossl_md5_functions),
-# endif /* OPENSSL_NO_MD5 */
-#endif /* OPENSSL_NO_RC4 */
-#ifndef OPENSSL_NO_RC5
-    ALG(PROV_NAMES_RC5_ECB, ossl_rc5128ecb_functions),
-    ALG(PROV_NAMES_RC5_CBC, ossl_rc5128cbc_functions),
-    ALG(PROV_NAMES_RC5_OFB, ossl_rc5128ofb64_functions),
-    ALG(PROV_NAMES_RC5_CFB, ossl_rc5128cfb64_functions),
-#endif /* OPENSSL_NO_RC5 */
-#ifndef OPENSSL_NO_DES
-    ALG(PROV_NAMES_DESX_CBC, ossl_tdes_desx_cbc_functions),
-    ALG(PROV_NAMES_DES_ECB, ossl_des_ecb_functions),
-    ALG(PROV_NAMES_DES_CBC, ossl_des_cbc_functions),
-    ALG(PROV_NAMES_DES_OFB, ossl_des_ofb64_functions),
-    ALG(PROV_NAMES_DES_CFB, ossl_des_cfb64_functions),
-    ALG(PROV_NAMES_DES_CFB1, ossl_des_cfb1_functions),
-    ALG(PROV_NAMES_DES_CFB8, ossl_des_cfb8_functions),
-#endif /* OPENSSL_NO_DES */
     { NULL, NULL, NULL }
 };
 
 static const OSSL_ALGORITHM legacy_kdfs[] = {
-    ALG(PROV_NAMES_PBKDF1, ossl_kdf_pbkdf1_functions),
     { NULL, NULL, NULL }
 };
 

